name: Test with Ansible

"on":
  push:
    paths-ignore:
      - README.md
      - LICENSE
      - galaxy.yml
      - AUTHORS
      - .github/labels.yml
      - .github/release-drafter.yml
  pull_request: {}
  schedule:
    - cron: '12 0 * * *'
  release:
    types:
      - published
      - prereleased

env:
  ANSIBLE_COLLECTIONS_PATH: ~/.ansible:~/work
  checkout_path: ansible_collections/oasis_roles/system

jobs:
  collect:
    runs-on: ubuntu-latest
    outputs:
      scenarios: ${{ steps.collection.outputs.tox-envs }}
      vagrant_scenarios: ${{ steps.vagrant.outputs.tox-envs }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          set -ex
          python -m pip install --upgrade tox
      - name: collect depenencies
        id: collection
        uses: greg-hellings/tox-list@v1
        with:
          tox-args: --ansible-driver docker --ansible-driver podman --ansible-driver containers
      - id: vagrant
        uses: greg-hellings/tox-list@v1
        with:
          tox-args: --ansible-driver vagrant

  lint:
    uses: oasis-roles/meta_test/.github/workflows/lint.yml@master
    with:
      checkout_path: ansible_collections/oasis_roles/system

  vagrant_build:
    needs:
      - collect
    uses: oasis-roles/meta_test/.github/workflows/vagrant_build.yml@master
    with:
      scenarios: "${{ needs.collect.outputs.vagrant_scenarios }}"
      checkout_path: ansible_collections/oasis_roles/system

  container_build:
    needs:
      - collect
    uses: oasis-roles/meta_test/.github/workflows/container_build.yml@master
    with:
      scenarios: "${{ needs.collect.outputs.scenarios }}"
      checkout_path: ansible_collections/oasis_roles/system

  release:
    needs:  # Only release if the build is good
      - lint
      - container_build
      - vagrant_build
    if: github.event_name == 'release'
    uses: oasis-roles/meta_test/.github/workflows/release.yml@master
    secrets:
      galaxy_api_key: "${{ secrets.GALAXY_API_KEY }}"
