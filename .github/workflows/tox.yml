name: Test with Ansible

"on":
  push: {}
  pull_request: {}
  schedule:
    - cron: '12 0 * * *'
  release:
    types:
      - published
      - prereleased

env:
  TOX_ANSIBLE_DRIVER: docker
  ANSIBLE_COLLECTIONS_PATH: ~/.ansible:~/work
  checkout_path: ansible_collections/oasis_roles/system

jobs:
  collect:
    runs-on: ubuntu-latest
    outputs:
      scenarios: ${{ steps.collection.outputs.tox-envs }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          set -ex
          python -m pip install --upgrade tox
      - name: collect depenencies
        id: collection
        uses: greg-hellings/tox-list@v1

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          path: ${{ env.checkout_path }}
      - name: Update submodules to latest
        run: |
          cd "${{ env.checkout_path }}"
          git submodule update --remote --recursive
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          set -ex
          python -m pip install --upgrade tox
      - name: Run lint
        run: |
          cd "${{ env.checkout_path }}"
          tox -e lint_all

  build:
    needs:
      - collect
      - lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        scenario: ${{ fromJson(needs.collect.outputs.scenarios) }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          path: ${{ env.checkout_path }}
      - name: Update submodules to latest
        run: |
          cd "${{ env.checkout_path }}"
          git submodule update --remote --recursive
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          set -ex
          sudo apt-get update
          sudo apt-get install -y libapt-pkg-dev build-essential python3-setuptools python3-apt
          python -m pip install --upgrade pip
          pip install -U setuptools wheel
          pip install tox
      - name: Run tox against ${{ matrix.scenario }}
        run: |
          set -ex
          mv ansible_collections ~/work
          cd ~/work/${{ env.checkout_path }}
          tox -e ${{ matrix.scenario }}

  release:
    needs: build  # Only release if the build is good
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: artis3n/ansible_galaxy_collection@v2.2.1
        with:
          api_key: ${{ secrets.GALAXY_API_KEY }}
